version: "3"
services:
  db:
    env_file: ./.env
    image: postgres:10-alpine
    volumes:
    - /var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DATABASE: postgres
    command: postgres -c log_connections=on -c logging_collector=on -c log_destination=stderr
#  redis:
#    restart: always
#    image: redis:4.0-alpine
#    ports:
#    - 6379:6379
#### Uncomment to enable REDIS persistence
#    volumes:
#    - /tmp/redis:/data
#
#  es:
#    restart: always
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.3
#    environment:
#    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#### Uncomment to enable ES persistence
#    volumes:
#    - /tmp/es:/usr/share/elasticsearch/data
  lb:
    env_file: ./.env
    image: ${HOSTNAME}/lb:${ENV}
    build:
      context: varnish
      dockerfile: ./Dockerfile
      args:
        LISTEN: ${LISTEN}
        HOSTNAME: ${HOSTNAME}
    ports:
      - 80:80
    links:
    - app
    depends_on:
    - app
    environment:
    - VARNISH_BACKEND_ADDRESS=app
    - VARNISH_BACKEND_PORT=${PORT}
  ssl:
    env_file: ./.env
    image: ${HOSTNAME}/ssl:${ENV}
    build:
      context: hitch
      dockerfile: ./Dockerfile
      args:
        LISTEN: ${LISTEN}
        HOSTNAME: ${HOSTNAME}
    ports:
    - 443:443
    depends_on:
    - lb
    links:
    - lb
    environment:
    - HITCH_BACKEND_ADDRESS=lb
    - HITCH_BACKEND_PORT=6081
    networks:
      default:
        aliases:
          - ${HOSTNAME}
  bootstrap:
    env_file: ./.env
    image: ${HOSTNAME}/bootstrap:${ENV}
    depends_on:
    - db
    links:
    - db
    build:
      context: .
      dockerfile: ./bootstrap/Dockerfile
      args:
        ENV: ${ENV}
        HOSTNAME: ${HOSTNAME}
  tasks:
    env_file: ./.env
    image: ${HOSTNAME}/tasks:${ENV}
    depends_on:
    - db
    links:
    - db
    build:
      context: .
      dockerfile: ./tasks/Dockerfile
      args:
        ENV: ${ENV}
        HOSTNAME: ${HOSTNAME}
  app:
    env_file: ./.env
    image: ${HOSTNAME}/app:${ENV}
    depends_on:
    - db
    links:
    - db
#    - redis
#    - es
    build:
      context: .
      dockerfile: ./app/Dockerfile
      args:
        ENV: ${ENV}
        LISTEN: ${LISTEN}
        HOSTNAME: ${HOSTNAME}
    command: app -host ${HOSTNAME} -port ${PORT} -i2p ${I2P}-env ${ENV}
